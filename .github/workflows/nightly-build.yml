name: nightly
on:
  push:
    branches: [main, ci]
jobs:
  move-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Move ci tag
        run: |
          bash .github/workflows/move-tag.sh "nightly-build" "Last commit build by the CI"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

  check-aya-version:
    uses: aya-prover/aya-dev/.github/workflows/extract-version.yaml@main

  publish-snapshot:
    needs: [check-aya-version]
    runs-on: ubuntu-latest
    if: github.repository == 'aya-prover/aya-dev' && needs.check-aya-version.outputs.isSnapshot == 'true' && false # disable for now
    env:
      ossrhUsername: ${{ secrets.OSSRHUSERNAME }}
      ossrhPassword: ${{ secrets.OSSRHPASSWORD }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java ${{ needs.check-aya-version.outputs.javaVersion }}
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: ${{ needs.check-aya-version.outputs.javaVersion }}
      - name: gradle publish
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publish --info --no-daemon --stacktrace --warning-mode all

  nightly-build:
    needs: [move-tag, check-aya-version]
    runs-on: ${{ matrix.os }}
    env:
      nativeName: pypy-cdn-mirror_native_${{ matrix.platform }}${{ matrix.binaryExt }}
      nativeSha256: pypy-cdn-mirror_native_${{ matrix.platform }}${{ matrix.binaryExt }}.sha256.txt
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: 'linux-x64'
            binaryExt: ''
          - os: macos-latest
            platform: 'macos-x64'
            binaryExt: ''
          - os: windows-latest
            platform: 'windows-x64'
            binaryExt: '.exe'
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java ${{ needs.check-aya-version.outputs.javaVersion }}
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: ${{ needs.check-aya-version.outputs.javaVersion }}

      - name: Run task fatJar
        uses: gradle/gradle-build-action@v2
        with:
          arguments: fatJar --no-daemon --stacktrace --warning-mode all
        if: matrix.os == 'ubuntu-latest'

      - name: Setup GraalVM for Java ${{ needs.check-aya-version.outputs.javaVersion }}
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ needs.check-aya-version.outputs.javaVersion }}
          distribution: 'graalvm-community'
          components: 'native-image'
          set-java-home: 'true'
          cache: 'gradle'
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'

      - name: Tell gradle where's my JDK
        run: |
          # Gradle should respect these environmental variables by default!
          echo 'org.gradle.java.installations.fromEnv=JAVA_HOME,GRAALVM_HOME' >> gradle.properties

      - name: Gradle, do you understand?
        uses: gradle/gradle-build-action@v2
        with:
          arguments: javaToolchains --no-daemon --stacktrace --warning-mode all

      - name: Run task nativeCompile
        uses: gradle/gradle-build-action@v2
        with:
          arguments: nativeCompile --no-daemon --stacktrace --warning-mode all

      - name: Copy Native Image
        run: cp ./mirror/build/native/nativeCompile/pypy-cdn-mirror${{ matrix.binaryExt }} ./${{ env.nativeName }}

      - name: Checksum (Native, Unix)
        run: shasum -a 256 ./${{ env.nativeName }} > ./${{ env.nativeSha256 }}
        if: matrix.os != 'windows-latest'

      - name: Checksum (Native, Windows)
        run: Get-FileHash ./${{ env.nativeName }} -Algorithm SHA256 > ./${{ env.nativeSha256 }}
        if: matrix.os == 'windows-latest'

      - name: Update Release (Native images)
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          isPrerelease: false
          tag_name: nightly-build
          release_name: "Nightly builds"
          body_mrkdwn: |
            _These are latest builds, but the date on GitHub is frozen due to stupid limitations.
            Corresponding commit: ${{ github.sha }}_
          assets: ${{ env.nativeSha256 }};${{ env.nativeName }}|application/octet-stream
          replace_assets: true
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Copy fat jar
        if: matrix.os == 'ubuntu-latest'
        run: |
          cp ./mirror/build/libs/*-fat.jar ./pypy-cdn-mirror-fatjar.jar
          cp ./indexer/build/libs/*-fat.jar ./aya-dance-indexer-fatjar.jar

      - name: Update Release (jars)
        uses: Xotl/cool-github-releases@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          mode: update
          isPrerelease: false
          tag_name: nightly-build
          release_name: "Nightly builds"
          body_mrkdwn: |
            _These are latest builds, but the date on GitHub is frozen due to stupid limitations.
            Corresponding commit: ${{ github.sha }}_
          assets: pypy-cdn-mirror-fatjar.jar;aya-dance-indexer-fatjar.jar;${{ steps.collect_jlinkAyaZip.outputs.jlinkFiles }}
          replace_assets: true
          github_token: ${{ secrets.GH_TOKEN  }}
